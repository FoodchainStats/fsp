[{"path":"https://foodchainstats.github.io/fsp/articles/ct.html","id":"acquire-and-plot-data","dir":"Articles","previous_headings":"","what":"Acquire and plot data","title":"Consumer Expenditure","text":"Data source ONS Consumer Trends data.","code":"ct <- acquire_ct() ct_metadata <- get_ct_metadata(ct) #> New names: #> New names: #> • `09.5.4 Newspapers; books & stationery Stationery & drawing materials CVM #>   NAYear £m` -> `09.5.4 Newspapers; books & stationery Stationery & drawing #>   materials CVM NAYear £m...168` #> • `09.5.4 Newspapers; books & stationery Stationery & drawing materials CVM #>   NAYear £m` -> `09.5.4 Newspapers; books & stationery Stationery & drawing #>   materials CVM NAYear £m...1041` ct_year <- get_ct_year(ct)  # alternate c(\"ABZV\",\"ADFM\",\"ADIG\",\"ABQI\",\"ADIP\",\"ADIT\",\"ADML\") cdids <- c(\"ABZV\", \"ADFM\", \"ADXO\", \"ADXP\")   data <- ct_metadata |>    dplyr::filter(cdid %in% cdids) |>    dplyr::left_join(ct_year) |>    dplyr::mutate(series = dplyr::case_when(cdid == \"ABZV\" ~ \"Household food and non-alcoholic beverages\",                                           cdid == \"ADFM\" ~ \"Alcoholic drinks (off licence only)\",                                           cdid %in% c(\"ADXO\", \"ADXP\") ~ \"Catering\")) |>    dplyr::group_by(series, date) |>    dplyr::summarise(value = sum(value)) #> Joining with `by = join_by(cdid)` #> `summarise()` has grouped output by 'series'. You can override using the #> `.groups` argument.    alternate <- c(\"ABZV\",\"ADFM\",\"ADIG\",\"ADIP\",\"ADIT\",\"ADML\",\"ABQI\") auk_data <- ct_metadata |>    dplyr::filter(cdid %in% alternate) |>    dplyr::left_join(ct_year) |>    dplyr::mutate(series = dplyr::case_when(cdid == \"ABZV\" ~ \"Household food and non-alcoholic beverages\",                                           cdid == \"ADFM\" ~ \"Alcoholic drinks (off licence only)\",                                           cdid == \"ADIG\" ~ \"Catering\",                                           cdid == \"ADIP\" ~ \"Household food and non-alcoholic beverages CVM\",                                           cdid == \"ADIT\" ~ \"Alcoholic drinks (off licence only) CVM\",                                           cdid == \"ADML\" ~ \"Catering CVM\",                                           cdid == \"ABQI\" ~ \"Household final consumption expenditure\")) |>    dplyr::group_by(series, date) |>    dplyr::summarise(value = sum(value)) |>     tidyr::pivot_wider(names_from=series,values_from=value)|>   dplyr::mutate(\"Total food, drink and catering expenditure\"=`Household food and non-alcoholic beverages`+`Catering`+`Alcoholic drinks (off licence only)`)|>     dplyr::mutate(\"Total food, drink and catering expenditure CVM\"=`Household food and non-alcoholic beverages CVM`+`Catering CVM`+`Alcoholic drinks (off licence only) CVM`)|>   dplyr::mutate(\"percent of total expenditure- Total food, drink and catering expenditure\"=scales::label_percent(accuracy=0.1)(`Total food, drink and catering expenditure`/`Household final consumption expenditure`))|>   dplyr::mutate(\"percent of total expenditure- household food\"=scales::label_percent(accuracy=0.1)(`Household food and non-alcoholic beverages`/`Household final consumption expenditure`))|>   dplyr::mutate(\"percent of total expenditure- food eaten out\"=scales::label_percent(accuracy=0.1)(`Catering`/`Household final consumption expenditure`))|>  dplyr::mutate(\"percent of total expenditure- alcohol\"=scales::label_percent(accuracy=0.1)(`Alcoholic drinks (off licence only)`/`Household final consumption expenditure`)) #> Joining with `by = join_by(cdid)` #> `summarise()` has grouped output by 'series'. You can override using the #> `.groups` argument.  write.csv(auk_data,\"figure_14_5_food_expenditure.csv\") #maybe saving here not optimal? For David to check    data |>    dplyr::filter(date >= \"2002-01-01\") |>   ggplot2::ggplot() +   ggplot2::geom_line(ggplot2::aes(x = date, y = value, colour = series)) +   ggplot2::scale_y_continuous(labels = scales::label_comma(scale = 0.001),) +   ggplot2::theme(legend.position = \"bottom\")"},{"path":"https://foodchainstats.github.io/fsp/articles/fsp.html","id":"what-this-package-is-supposed-to-be","dir":"Articles","previous_headings":"","what":"What this package is supposed to be","title":"Getting started with fsp","text":"idea collate set functions assist updating sections pocketbook, together examples using articles site make guidance producing items publication.","code":""},{"path":"https://foodchainstats.github.io/fsp/articles/fsp.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started with fsp","text":"can install development version fsp GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"FoodchainStats/fsp\")"},{"path":"https://foodchainstats.github.io/fsp/articles/fsp.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Getting started with fsp","text":"several broad categories functions, generally aimed helping access datasets underlie pocketbook content, wrangle useful shape. url_* functions simply store address datasets . used fsp functions download data. things arent working first thing can manually check url see pointing right data. acquire_* functions actually download data. default download temporary file, can specify folder download . functions return path downloaded file. can use output acquire_* functions , eg read.csv() similar functions. Alternatively… get_* functions wrap around url acquire, reading data returning tibble. cases also bit light processing, eg cleaning variable names. source datasets may return element underlying data, monthly yearly data, metadata dataset contents.","code":""},{"path":"https://foodchainstats.github.io/fsp/articles/jobs03.html","id":"acquire-data","dir":"Articles","previous_headings":"","what":"Acquire data","title":"Agri-food chain employment","text":"first step acquire raw data.","code":"library(fsp)  lvls <- c(\"Agriculture\",           \"Fishing\",           \"Manufacturing\",           \"Wholesale\",           \"Retail\",           \"Catering\")  ag_gb <- fsp::compile_ag_workforce() jobs03 <- fsp::get_jobs03() #> Reading JOBS03 #>  ■■■■■                             13% |  ETA: 15s #>  ■■■■■■■■■■                        30% |  ETA: 12s #>  ■■■■■■■■■■■■■■■                   46% |  ETA: 10s #>  ■■■■■■■■■■■■■■■■■■■■              64% |  ETA:  6s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■         81% |  ETA:  3s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■    98% |  ETA:  0s  food <- fsp::jobs03_sectors(include_total = FALSE) |>    dplyr::left_join(jobs03, by = dplyr::join_by(sic_division)) |>    dplyr::group_by(sector, date) |>    dplyr::summarise(value = sum(value)) |>    dplyr::bind_rows(ag_gb) |>    dplyr::mutate(sector = forcats::fct(sector, levels = lvls)) #> `summarise()` has grouped output by 'sector'. You can override using the #> `.groups` argument.   #added total industries comparison food_auk<- jobs03_AUK_sectors() |>     dplyr::left_join(jobs03, by = dplyr::join_by(sic_division)) |>    dplyr::group_by(sector, date) |>    dplyr::summarise(value = sum(value)) |>    dplyr::bind_rows(ag_gb) #Q4 2023 figures not released? #> `summarise()` has grouped output by 'sector'. You can override using the #> `.groups` argument.  food |>    dplyr::arrange(desc(date)) |>    head() |>    knitr::kable()"},{"path":"https://foodchainstats.github.io/fsp/articles/jobs03.html","id":"wrangle","dir":"Articles","previous_headings":"","what":"Wrangle","title":"Agri-food chain employment","text":"Since agricultural workforce data annual, JOBS03 data quarterly, latest year may include figures agriculture. Lets get yearly averages, calculate percentage changes case come useful.","code":"fsp_food <- food |>    dplyr::mutate(year = lubridate::year(date)) |>    dplyr::group_by(sector, year) |>    dplyr::summarise(value = mean(value)) |>    dplyr::group_by(sector) |>    dplyr::mutate(yoy_pct_change = scales::label_percent(accuracy = 0.1) (value/dplyr::lag(value) - 1)) |>    dplyr::group_by(year) |>    dplyr::mutate(pct_of_tot = scales::label_percent(accuracy = 0.1) (value/sum(value)))  #> `summarise()` has grouped output by 'sector'. You can override using the #> `.groups` argument.  #latest_year<-max(fsp_food$year) #potentially parameter for the latest year  fsp_food |>    dplyr::filter(year == 2022) |>   knitr::kable(digits = 2)"},{"path":"https://foodchainstats.github.io/fsp/articles/jobs03.html","id":"prepare-for-publication","dir":"Articles","previous_headings":"","what":"Prepare for publication","title":"Agri-food chain employment","text":"Now got numbers, just case wrangling table suitable form converting govspeak publication. code feels clunky inelegant, works.","code":"x <- fsp_food |>  dplyr::mutate(total = \"Total Agri-Food\",               food_chain = dplyr::case_when(sector != \"Agriculture\" ~ \"Total Food\"),               ag_fish = dplyr::case_when(sector %in% c(\"Agriculture\", \"Fishing\") ~ \"Agriculture (including fishing)\"))    a <- x |>    dplyr::filter(year == 2022) |>    dplyr::group_by(ag_fish) |>    dplyr::summarise(value = sum(value)) |>    dplyr::filter(!is.na(ag_fish)) |>    dplyr::rename(sector = ag_fish)  b <- x |>    dplyr::filter(year == 2022) |>    dplyr::group_by(sector) |>    dplyr::summarise(value = sum(value)) |>    dplyr::filter(sector %in% c(\"Manufacturing\", \"Wholesale\", \"Retail\", \"Catering\"))   c <- x |>    dplyr::filter(year == 2022) |>    dplyr::group_by(food_chain) |>    dplyr::summarise(value = sum(value)) |>    dplyr::filter(!is.na(food_chain)) |>    dplyr::rename(sector = food_chain)  d <- x |>    dplyr::filter(year == 2022) |>    dplyr::group_by(total) |>    dplyr::summarise(value = sum(value)) |>    dplyr::filter(!is.na(total)) |>    dplyr::rename(sector = total)  fsp_table <- dplyr::bind_rows(a, b, c, d) |>    dplyr::mutate(sector = dplyr::case_when(sector == \"Manufacturing\" ~ \"Food and Drink Manufacturing\",                                           sector == \"Wholesale\" ~ \"Food and Drink Wholesaling\",                                           sector == \"Retail\" ~ \"Food and Drink Retailing\",                                           sector == \"Catering\" ~ \"Food and Drink Non-Residential Catering\",                                           .default = sector),                 value = value/1000) |>    dplyr::select(Sector = sector, `Employees (millions)` = value)  fsp_table |> knitr::kable(digits = 3,format = \"pipe\") #auk_table"},{"path":"https://foodchainstats.github.io/fsp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Lee. Author, maintainer.","code":""},{"path":"https://foodchainstats.github.io/fsp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lee D (2025). fsp: Utilities Food Statistics Pocketbook. R package version 0.0.0.9000, https://foodchainstats.github.io/fsp/.","code":"@Manual{,   title = {fsp: Utilities for the Food Statistics Pocketbook},   author = {David Lee},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://foodchainstats.github.io/fsp/}, }"},{"path":"https://foodchainstats.github.io/fsp/index.html","id":"fsp","dir":"","previous_headings":"","what":"Utilities for the Food Statistics Pocketbook","title":"Utilities for the Food Statistics Pocketbook","text":"Experimental functions assist producing Food Statistics Pocketbook","code":""},{"path":"https://foodchainstats.github.io/fsp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for the Food Statistics Pocketbook","text":"can install development version fsp GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"FoodchainStats/fsp\")"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ag_workforce.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Defra Agricultural Workforce dataset — acquire_ag_workforce","title":"Download Defra Agricultural Workforce dataset — acquire_ag_workforce","text":"downloaded file ODS spreadsheet.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ag_workforce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Defra Agricultural Workforce dataset — acquire_ag_workforce","text":"","code":"acquire_ag_workforce(path)"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ag_workforce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Defra Agricultural Workforce dataset — acquire_ag_workforce","text":"path Folder put downloaded data . missing tempfile created. specified downloaded file named 'ag_workforce.ods'.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ag_workforce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Defra Agricultural Workforce dataset — acquire_ag_workforce","text":"file path name downloaded file.","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ag_workforce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Defra Agricultural Workforce dataset — acquire_ag_workforce","text":"","code":"if (FALSE) { # \\dontrun{ jobs03 <- acquire_ag_workforce()  file <- acquire_ag_workforce(\"~/downloads\") } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_bpe.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Business Population Estimate data — acquire_bpe","title":"Download Business Population Estimate data — acquire_bpe","text":"Download Business Population Estimate data","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_bpe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Business Population Estimate data — acquire_bpe","text":"","code":"acquire_bpe(year = 2024, path)"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_bpe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Business Population Estimate data — acquire_bpe","text":"year year download data (> 2012) path Folder put downloaded data . missing tempfile created. specified downloaded file named 'bpe_year.xlsx'.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_bpe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Business Population Estimate data — acquire_bpe","text":"file path downloaded file","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_bpe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Business Population Estimate data — acquire_bpe","text":"","code":"if (FALSE) { # \\dontrun{ bpe <- acquire_bpe(year = 2022)  file <- acquire_bpe(\"~/downloads\") } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ONS Consumer Trends dataset — acquire_ct","title":"Download ONS Consumer Trends dataset — acquire_ct","text":"Download ONS Consumer Trends dataset","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ONS Consumer Trends dataset — acquire_ct","text":"","code":"acquire_ct(path)"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ONS Consumer Trends dataset — acquire_ct","text":"path Folder put downloaded data . missing tempfile created. specified downloaded file named 'ct.csv'.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ONS Consumer Trends dataset — acquire_ct","text":"file path name downloaded file.","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download ONS Consumer Trends dataset — acquire_ct","text":"","code":"if (FALSE) { # \\dontrun{ jobs03 <- acquire_ct()  file <- acquire_ct(\"~/downloads\") } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_jobs03.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ONS JOBS03 dataset — acquire_jobs03","title":"Download ONS JOBS03 dataset — acquire_jobs03","text":"Download ONS JOBS03 dataset","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_jobs03.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ONS JOBS03 dataset — acquire_jobs03","text":"","code":"acquire_jobs03(path)"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_jobs03.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ONS JOBS03 dataset — acquire_jobs03","text":"path Folder put downloaded data . missing tempfile created. specified downloaded file named 'jobs03.xls'.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_jobs03.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ONS JOBS03 dataset — acquire_jobs03","text":"file path name downloaded file.","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_jobs03.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download ONS JOBS03 dataset — acquire_jobs03","text":"","code":"if (FALSE) { # \\dontrun{ jobs03 <- acquire_jobs03()  file <- acquire_jobs03(\"~/downloads\") } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_unctad.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract UNCTAD Commodity Price indices — acquire_unctad","title":"Extract UNCTAD Commodity Price indices — acquire_unctad","text":"UNCTAD data 7zip format, now least needs downloaded manually (see url_unctad()). Internally uses archive library requires libarchive-dev installed Ubuntu machines.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_unctad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract UNCTAD Commodity Price indices — acquire_unctad","text":"","code":"acquire_unctad(file, path)"},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_unctad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract UNCTAD Commodity Price indices — acquire_unctad","text":"file downloaded UNCTAD commodity data file 7zip format path Folder put downloaded data . missing tempfile created. specified downloaded file named 'commodityprices.csv'.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_unctad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract UNCTAD Commodity Price indices — acquire_unctad","text":"file path name downloaded file.","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/acquire_unctad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract UNCTAD Commodity Price indices — acquire_unctad","text":"","code":"a <- system.file(\"extdata\", \"unctad-example.csv.7z\", package = \"fsp\") a #> [1] \"/home/runner/work/_temp/Library/fsp/extdata/unctad-example.csv.7z\" acquire_unctad(a) #> [1] \"/tmp/RtmpBiI4ut/file1d95329b787b/US_CommodityPrice_M_20231206030105.csv\""},{"path":"https://foodchainstats.github.io/fsp/reference/compile_ag_workforce.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile GB Agricultural workforce data — compile_ag_workforce","title":"Compile GB Agricultural workforce data — compile_ag_workforce","text":"Compile GB Agricultural workforce data","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/compile_ag_workforce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile GB Agricultural workforce data — compile_ag_workforce","text":"","code":"compile_ag_workforce()"},{"path":"https://foodchainstats.github.io/fsp/reference/compile_ag_workforce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile GB Agricultural workforce data — compile_ag_workforce","text":"tibble quarterly data containing: date Date value Number employees (000s) sector Sector","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/compile_ag_workforce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile GB Agricultural workforce data — compile_ag_workforce","text":"","code":"if (FALSE) { # \\dontrun{ data <- compile_ag_workforce() } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/fsp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fsp: Utilities for the Food Statistics Pocketbook — fsp-package","title":"fsp: Utilities for the Food Statistics Pocketbook — fsp-package","text":"Experimental functions assist producing Pocketbook.","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/fsp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fsp: Utilities for the Food Statistics Pocketbook — fsp-package","text":"Maintainer: David Lee david.lee@defra.gov.uk (ORCID)","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ag_workforce.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from an Agricultural workforce ods file — get_ag_workforce","title":"Extract data from an Agricultural workforce ods file — get_ag_workforce","text":"Extract data Agricultural workforce ods file","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ag_workforce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from an Agricultural workforce ods file — get_ag_workforce","text":"","code":"get_ag_workforce(file, sheet = \"Ag_workforce_by_country\")"},{"path":"https://foodchainstats.github.io/fsp/reference/get_ag_workforce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from an Agricultural workforce ods file — get_ag_workforce","text":"file spreadsheet ods format. omitted, downloaded using acquire_ag_workforce(). sheet Spreadsheet tab name number","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ag_workforce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from an Agricultural workforce ods file — get_ag_workforce","text":"tibble workforce data","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_ag_workforce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from an Agricultural workforce ods file — get_ag_workforce","text":"","code":"if (FALSE) { # \\dontrun{ # download and extract in one go ag <- get_ag_workforce()  # or download separately and extract  ag <- acquire_ag_workforce() data <- get_ag_workforce(ag)  } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/get_bpe.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from a Business Population Estimate xlsx file — get_bpe","title":"Extract data from a Business Population Estimate xlsx file — get_bpe","text":"Extract data Business Population Estimate xlsx file","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_bpe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from a Business Population Estimate xlsx file — get_bpe","text":"","code":"get_bpe(rawfile, year = 2024)"},{"path":"https://foodchainstats.github.io/fsp/reference/get_bpe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from a Business Population Estimate xlsx file — get_bpe","text":"rawfile BPE xlsx file. omitted, file downloaded year data downloaded, year required (> 2012)","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_bpe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from a Business Population Estimate xlsx file — get_bpe","text":"datafrae BPE data","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_bpe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from a Business Population Estimate xlsx file — get_bpe","text":"","code":"if (FALSE) { # \\dontrun{ # In one go data <- get_bpe(year = 2021)  # or download first file <- acquire_bpe(year = 2023) data <- get_bpe(file) } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Consumer Trends metadata — get_ct_metadata","title":"Get Consumer Trends metadata — get_ct_metadata","text":"Get Consumer Trends metadata","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Consumer Trends metadata — get_ct_metadata","text":"","code":"get_ct_metadata(rawfile)"},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Consumer Trends metadata — get_ct_metadata","text":"rawfile ONS ct.csv file","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Consumer Trends metadata — get_ct_metadata","text":"tibble series metadata","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Consumer Trends metadata — get_ct_metadata","text":"","code":"if (FALSE) { # \\dontrun{ get_ct_metadata() } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_quarter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Consumer Trends quarterly data — get_ct_quarter","title":"Get Consumer Trends quarterly data — get_ct_quarter","text":"Get Consumer Trends quarterly data","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_quarter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Consumer Trends quarterly data — get_ct_quarter","text":"","code":"get_ct_quarter(rawfile)"},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_quarter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Consumer Trends quarterly data — get_ct_quarter","text":"rawfile ONS ct.csv file","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_quarter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Consumer Trends quarterly data — get_ct_quarter","text":"tibble quarterly series data","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_quarter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Consumer Trends quarterly data — get_ct_quarter","text":"","code":"if (FALSE) { # \\dontrun{ get_ct_quarter() } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Consumer Trends annual data — get_ct_year","title":"Get Consumer Trends annual data — get_ct_year","text":"Get Consumer Trends annual data","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Consumer Trends annual data — get_ct_year","text":"","code":"get_ct_year(rawfile)"},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Consumer Trends annual data — get_ct_year","text":"rawfile ONS ct.csv file","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Consumer Trends annual data — get_ct_year","text":"tibble annual series data","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_ct_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Consumer Trends annual data — get_ct_year","text":"","code":"if (FALSE) { # \\dontrun{ egt_ct_year() } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/get_jobs03.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from a JOBS03 xls file — get_jobs03","title":"Extract data from a JOBS03 xls file — get_jobs03","text":"Extract data JOBS03 xls file","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_jobs03.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from a JOBS03 xls file — get_jobs03","text":"","code":"get_jobs03(file, sheet = \"8. GB Totals\")"},{"path":"https://foodchainstats.github.io/fsp/reference/get_jobs03.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from a JOBS03 xls file — get_jobs03","text":"file JOBS03 xls file. omitted, file downloaded sheet Spreadsheet tab name number.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_jobs03.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from a JOBS03 xls file — get_jobs03","text":"dataframe employment data","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_jobs03.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from a JOBS03 xls file — get_jobs03","text":"","code":"if (FALSE) { # \\dontrun{ # download in one go data <- get_jobs03()  # or download first jobs <- acquire_jobs03() data <- get_jobs03(jobs) } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UNCTAD data — get_unctad","title":"Get UNCTAD data — get_unctad","text":"Get UNCTAD data","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UNCTAD data — get_unctad","text":"","code":"get_unctad(file)"},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UNCTAD data — get_unctad","text":"file UNCTAD 7zip download file (see url_unctad() get )","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UNCTAD data — get_unctad","text":"tibble UNCTAD commodity price data","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UNCTAD data — get_unctad","text":"","code":"a <- system.file(\"extdata\", \"unctad-example.csv.7z\", package = \"fsp\") a #> [1] \"/home/runner/work/_temp/Library/fsp/extdata/unctad-example.csv.7z\" get_unctad(a) #> # A tibble: 18,910 × 6 #>    date       commodity commodity_label                   prices prices_footnote #>    <date>     <chr>     <chr>                              <dbl> <chr>           #>  1 1995-01-01 IN0001.20 All groups                         NA    NA              #>  2 1995-01-01 IN0001.01 All food                           NA    NA              #>  3 1995-01-01 IN0001.02 Food                               NA    NA              #>  4 1995-01-01 080300.01 Bananas, Central and South Ameri…   0.35 NA              #>  5 1995-01-01 020100.01 Beef, Australia/New Zealand, fro…   2.12 NA              #>  6 1995-01-01 100500.01 Maize, Argentina, Rosario, Up Ri… 105.   NA              #>  7 1995-01-01 100500.02 Maize, United States, n° 3 yello… 109.   NA              #>  8 1995-01-01 100600.01 Rice, Thailand, white milled, 5%… 277.   NA              #>  9 1995-01-01 030212.01 Salmon, fresh, fish-farm bred, e…   4.81 NA              #> 10 1995-01-01 030613.01 Shrimps, brown, no. 1, shell-on,…  13.4  NA              #> # ℹ 18,900 more rows #> # ℹ 1 more variable: prices_missing_value <chr>"},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get UNCTAD metadata — get_unctad_metadata","title":"Get UNCTAD metadata — get_unctad_metadata","text":"Get UNCTAD metadata","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get UNCTAD metadata — get_unctad_metadata","text":"","code":"get_unctad_metadata(file)"},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get UNCTAD metadata — get_unctad_metadata","text":"file UNCTAD 7zip download file (see url_unctad() get )","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get UNCTAD metadata — get_unctad_metadata","text":"tibble UNCTAD commodity price metadata","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/get_unctad_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get UNCTAD metadata — get_unctad_metadata","text":"","code":"a <- system.file(\"extdata\", \"unctad-example.csv.7z\", package = \"fsp\") a #> [1] \"/home/runner/work/_temp/Library/fsp/extdata/unctad-example.csv.7z\" get_unctad_metadata(a) #> # A tibble: 58 × 3 #>    commodity commodity_label                                                   n #>    <chr>     <chr>                                                         <int> #>  1 020100.01 Beef, Australia/New Zealand, frozen, CIF US ports ($/kg)        346 #>  2 030212.01 Salmon, fresh, fish-farm bred, export price, Norway ($/kg)      346 #>  3 030613.01 Shrimps, brown, no. 1, shell-on, headless, Mexico ($/kg)        346 #>  4 080300.01 Bananas, Central and South America, FOT, US import price ($/…   346 #>  5 080300.02 Bananas, Central America, Main Brands (average of US East an…   225 #>  6 090100.01 Coffee, Colombian mild Arabicas, ex-dock US (¢/lb.)             346 #>  7 090100.02 Coffee, Brazilian and other natural Arabicas, ex-dock USA (¢…   346 #>  8 090100.03 Coffee, other mild Arabicas, ex-dock US (¢/lb.)                 346 #>  9 090100.04 Coffee, other mild Arabicas, ex-dock EU (¢/lb.)                 346 #> 10 090100.05 Coffee, Robustas, ex-dock US (¢/lb.)                            346 #> # ℹ 48 more rows"},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_AUK_sectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of AUK JOBS03 SIC codes and food chain sectors — jobs03_AUK_sectors","title":"Dataset of AUK JOBS03 SIC codes and food chain sectors — jobs03_AUK_sectors","text":"Deprecated. See parameters jobs03_sectors() ways excluding fishing total industry definitions.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_AUK_sectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset of AUK JOBS03 SIC codes and food chain sectors — jobs03_AUK_sectors","text":"","code":"jobs03_AUK_sectors()"},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_AUK_sectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataset of AUK JOBS03 SIC codes and food chain sectors — jobs03_AUK_sectors","text":"tibble SIC codes sectors.","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_AUK_sectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset of AUK JOBS03 SIC codes and food chain sectors — jobs03_AUK_sectors","text":"","code":"jobs03_AUK_sectors() #> # A tibble: 12 × 2 #>    sector           sic_division #>    <chr>            <chr>        #>  1 Manufacturing    10.1-5       #>  2 Manufacturing    10.6-8       #>  3 Manufacturing    10.9         #>  4 Manufacturing    11-12        #>  5 Wholesale        46.30        #>  6 Retail           47.20        #>  7 Retail           47.11        #>  8 Catering         56.10        #>  9 Catering         56.20        #> 10 Catering         56.30        #> 11 Fishing          03           #> 12 total_industries 01-98"},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_sectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of JOBS03 SIC codes and food chain sectors — jobs03_sectors","title":"Dataset of JOBS03 SIC codes and food chain sectors — jobs03_sectors","text":"'official' SIC definition food chain Defra uses described pocketbook glossary. dataset uses SIC codes included JOBS03. useful join raw JOBS03 data extract food sectors interest.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_sectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset of JOBS03 SIC codes and food chain sectors — jobs03_sectors","text":"","code":"jobs03_sectors(include_fishing = TRUE, include_total = TRUE)"},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_sectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset of JOBS03 SIC codes and food chain sectors — jobs03_sectors","text":"include_fishing logical: include definition fishing industry include_total logical: include definition total UK industry","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_sectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataset of JOBS03 SIC codes and food chain sectors — jobs03_sectors","text":"tibble SIC codes sectors.","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/jobs03_sectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset of JOBS03 SIC codes and food chain sectors — jobs03_sectors","text":"","code":"jobs03_sectors() #> # A tibble: 12 × 2 #>    sector         sic_division #>    <chr>          <chr>        #>  1 Manufacturing  10.1-5       #>  2 Manufacturing  10.6-8       #>  3 Manufacturing  10.9         #>  4 Manufacturing  11-12        #>  5 Wholesale      46.30        #>  6 Retail         47.20        #>  7 Retail         47.11        #>  8 Catering       56.10        #>  9 Catering       56.20        #> 10 Catering       56.30        #> 11 Fishing        03           #> 12 All Industries 01-98"},{"path":"https://foodchainstats.github.io/fsp/reference/url_abs.html","id":null,"dir":"Reference","previous_headings":"","what":"URL for the current Annual Business Survey dataset — url_abs","title":"URL for the current Annual Business Survey dataset — url_abs","text":"Returns latest file ONS","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL for the current Annual Business Survey dataset — url_abs","text":"","code":"url_abs()"},{"path":"https://foodchainstats.github.io/fsp/reference/url_abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL for the current Annual Business Survey dataset — url_abs","text":"url dataset","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_abs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL for the current Annual Business Survey dataset — url_abs","text":"","code":"url_abs() #> [1] \"https://www.ons.gov.uk/file?uri=/businessindustryandtrade/business/businessservices/datasets/uknonfinancialbusinesseconomyannualbusinesssurveysectionsas/current/abssectionsas.xlsx\""},{"path":"https://foodchainstats.github.io/fsp/reference/url_ag_workforce.html","id":null,"dir":"Reference","previous_headings":"","what":"URL for Defra Agricultural Workforce data — url_ag_workforce","title":"URL for Defra Agricultural Workforce data — url_ag_workforce","text":"Scrapes filename latest data Defra Agricultural workforce site. file ODS spreadsheet.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_ag_workforce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL for Defra Agricultural Workforce data — url_ag_workforce","text":"","code":"url_ag_workforce()"},{"path":"https://foodchainstats.github.io/fsp/reference/url_ag_workforce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL for Defra Agricultural Workforce data — url_ag_workforce","text":"url dataset.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_ag_workforce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL for Defra Agricultural Workforce data — url_ag_workforce","text":"","code":"if (FALSE) { # \\dontrun{ url_ag_workforce() } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/url_bpe.html","id":null,"dir":"Reference","previous_headings":"","what":"URL for Business Population Estimates — url_bpe","title":"URL for Business Population Estimates — url_bpe","text":"Returns URL Business Population Estimates detailed MS Excel spreadsheet. URL generated using year parameter depends gov.uk page naming consistency.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_bpe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL for Business Population Estimates — url_bpe","text":"","code":"url_bpe(year = 2024)"},{"path":"https://foodchainstats.github.io/fsp/reference/url_bpe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL for Business Population Estimates — url_bpe","text":"year year get data (> 2012)","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_bpe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL for Business Population Estimates — url_bpe","text":"url BPE collection page","code":""},{"path":[]},{"path":"https://foodchainstats.github.io/fsp/reference/url_bpe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL for Business Population Estimates — url_bpe","text":"","code":"url_bpe() #> [1] \"https://assets.publishing.service.gov.uk/media/66f554dcc71e42688b65ecd3/BPE_2024_detailed_tables.xlsx\""},{"path":"https://foodchainstats.github.io/fsp/reference/url_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"URL for the current Consumer Trends dataset — url_ct","title":"URL for the current Consumer Trends dataset — url_ct","text":"URL current Consumer Trends dataset","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL for the current Consumer Trends dataset — url_ct","text":"","code":"url_ct()"},{"path":"https://foodchainstats.github.io/fsp/reference/url_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL for the current Consumer Trends dataset — url_ct","text":"url dataset.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL for the current Consumer Trends dataset — url_ct","text":"","code":"url_ct() #> [1] \"https://www.ons.gov.uk/file?uri=/economy/nationalaccounts/satelliteaccounts/datasets/consumertrends/current/ct.csv\""},{"path":"https://foodchainstats.github.io/fsp/reference/url_jobs03.html","id":null,"dir":"Reference","previous_headings":"","what":"URL for the current JOBS03 dataset — url_jobs03","title":"URL for the current JOBS03 dataset — url_jobs03","text":"Scrapes filename latest dataset JOBS03","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_jobs03.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL for the current JOBS03 dataset — url_jobs03","text":"","code":"url_jobs03()"},{"path":"https://foodchainstats.github.io/fsp/reference/url_jobs03.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL for the current JOBS03 dataset — url_jobs03","text":"url dataset.","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_jobs03.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL for the current JOBS03 dataset — url_jobs03","text":"","code":"if (FALSE) { # \\dontrun{ url_jobs03() } # }"},{"path":"https://foodchainstats.github.io/fsp/reference/url_unctad.html","id":null,"dir":"Reference","previous_headings":"","what":"URL for UNCTAD commodity price indices data — url_unctad","title":"URL for UNCTAD commodity price indices data — url_unctad","text":"Currently data scraped (clever enough ), function simply returns url can manually downloaded. file 7zip archive. acquire_unctad(), get_unctad() get_unctad_metadata() functions require access downloaded 7zip. package includes example file - access using: system.file(\"extdata\", \"unctad-example.csv.7z\", package = \"fsp\")","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_unctad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL for UNCTAD commodity price indices data — url_unctad","text":"","code":"url_unctad()"},{"path":"https://foodchainstats.github.io/fsp/reference/url_unctad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL for UNCTAD commodity price indices data — url_unctad","text":"url commodity price indices","code":""},{"path":"https://foodchainstats.github.io/fsp/reference/url_unctad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL for UNCTAD commodity price indices data — url_unctad","text":"","code":"if (FALSE) { # \\dontrun{ url_unctad() } # }"}]
